{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CardViewWithImage } from 'react-native-simple-card-view';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Detail } from \"./component/Detail\";\nimport { RandomCard } from \"./component/RandomCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Detail\n      }), _jsx(Stack.Screen, {\n        name: \"Gacha\",\n        component: RandomCard\n      })]\n    })\n  });\n};\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      res = _useState2[0],\n      setRes = _useState2[1];\n\n  useEffect(function () {\n    axios.get('https://api.pokemontcg.io/v2/cards').then(function (response) {\n      console.log(response.data.data);\n      setRes(response.data.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      style: styles.button,\n      title: \"get a random card !\",\n      onPress: function onPress() {\n        return navigation.navigate('Gacha', {\n          list: res\n        });\n      }\n    }), _jsx(FlatList, {\n      contentContainerStyle: {\n        flew: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column'\n      },\n      data: res,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(CardViewWithImage, {\n          width: 300,\n          source: {\n            uri: item.images.small\n          },\n          content: 'Click on me to get more details !',\n          title: item.name,\n          imageWidth: '100%',\n          imageHeight: 500,\n          onPress: function onPress() {\n            return navigation.navigate('Details', {\n              card: item\n            });\n          },\n          roundedImage: false\n        });\n      }\n    })]\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  view: {},\n  button: {\n    position: 'relative',\n    top: 0\n  }\n});","map":{"version":3,"sources":["D:/reactnative/pokemonTCG/App.js"],"names":["React","useEffect","useState","axios","CardViewWithImage","NavigationContainer","createNativeStackNavigator","Detail","RandomCard","Stack","App","Home","navigation","res","setRes","get","then","response","console","log","data","catch","error","styles","button","navigate","list","flew","alignItems","justifyContent","flexDirection","item","uri","images","small","name","card","StyleSheet","create","view","position","top"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FlatList, TouchableOpacity, Button } from 'react-native';\nimport { CardViewWithImage } from 'react-native-simple-card-view'\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Detail } from './component/Detail'\nimport { RandomCard } from './component/RandomCard';\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen \n          name=\"Home\"  \n          component={Home}\n        />\n        <Stack.Screen\n          name=\"Details\"\n          component={Detail}\n        /> \n        <Stack.Screen\n          name=\"Gacha\"\n          component={RandomCard}\n        />     \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst Home = ({navigation}) => {\n  const [res, setRes] = useState([]);\n  useEffect(() => {\n        axios.get('https://api.pokemontcg.io/v2/cards')\n        .then(function (response) {\n        console.log(response.data.data);\n        setRes(response.data.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n        \n  }, []);\n  return(\n    <View>\n      <Button\n        style = {styles.button}\n        title = \"get a random card !\"\n        onPress = {() => navigation.navigate('Gacha', {list: res})}\n      />\n      <FlatList\n        contentContainerStyle={{\n          flew : 1,\n          alignItems : 'center',\n          justifyContent : 'center',\n          flexDirection : 'column',\n\n        }}\n        data={res}\n        renderItem={({item}) =>\n            <CardViewWithImage\n            width={300}\n            source={{uri: item.images.small}}\n            content={ 'Click on me to get more details !' }\n            title={ item.name }\n            imageWidth={ '100%' }\n            imageHeight={ 500 }\n            onPress={() => navigation.navigate('Details', {card: item})}\n            roundedImage={ false }\n          />\n      }\n      />\n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  view : {\n    \n  },\n  button : {\n    position : 'relative',\n    top : 0\n  }\n});\n"]},"metadata":{},"sourceType":"module"}